openapi: 3.0.3
info:
  title: Task API
  version: 1.0.0
  description: Simple Task Management API (register/login + JWT + task CRUD + search)
servers:
  - url: http://localhost:5000
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Register:
      type: object
      required: [name, email, password]
      properties:
        name: { type: string }
        email: { type: string, format: email }
        password: { type: string, format: password }
    Login:
      type: object
      required: [email, password]
      properties:
        email: { type: string, format: email }
        password: { type: string, format: password }
    Task:
      type: object
      required: [task]
      properties:
        id: { type: integer, readOnly: true }
        user_id: { type: integer, readOnly: true }
        task: { type: string }
paths:
  /register:
    post:
      summary: Register a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Register'
      responses:
        '200':
          description: User created
  /login:
    post:
      summary: Login and receive JWT
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
      responses:
        '200':
          description: Access token
          content:
            application/json:
              schema:
                type: object
                properties:
                  token: { type: string }
  /tasks:
    get:
      summary: List/search tasks for authenticated user
      description: Use `?search=query` to filter tasks by text (partial match)
      security: [{ bearerAuth: [] }]
      parameters:
        - in: query
          name: search
          schema: { type: string }
          description: Search tasks by text
      responses:
        '200':
          description: List of tasks
          content:
            application/json:
              schema:
                type: array
                items: { $ref: '#/components/schemas/Task' }
    post:
      summary: Create a task
      security: [{ bearerAuth: [] }]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
      responses:
        '201':
          description: Task created
  /task/{id}:
    put:
      summary: Update a task
      security: [{ bearerAuth: [] }]
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: integer }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                task: { type: string }
      responses:
        '200': { description: Task updated }
    delete:
      summary: Delete a task
      security: [{ bearerAuth: [] }]
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: integer }
      responses:
        '200': { description: Task deleted }
